import unittest
from 7-base_geometry import BaseGeometry

class TestBaseGeometry(unittest.TestCase):

    def test_area_not_implemented(self):
        bg = BaseGeometry()
        with self.assertRaises(Exception) as context:
            bg.area()
        self.assertEqual(str(context.exception), "area() is not implemented")

    def test_integer_validator_valid_values(self):
        bg = BaseGeometry()
        bg.integer_validator("my_int", 12)
        bg.integer_validator("width", 89)

    def test_integer_validator_invalid_string_value(self):
        bg = BaseGeometry()
        with self.assertRaises(TypeError) as context:
            bg.integer_validator("name", "John")
        self.assertEqual(str(context.exception), "name must be an integer")

    def test_integer_validator_invalid_zero_value(self):
        bg = BaseGeometry()
        with self.assertRaises(ValueError) as context:
            bg.integer_validator("age", 0)
        self.assertEqual(str(context.exception), "age must be greater than 0")

    def test_integer_validator_invalid_negative_value(self):
        bg = BaseGeometry()
        with self.assertRaises(ValueError) as context:
            bg.integer_validator("distance", -4)
        self.assertEqual(str(context.exception), "distance must be greater than 0")

if __name__ == "__main__":
    unittest.main()
